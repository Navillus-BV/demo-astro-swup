---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';

// page
let title = 'Don’s Blog';
let description = 'An example blog on Astro';
let canonicalURL = Astro.request.canonicalURL;

// collection
import authorData from '../data/authors.json';
export function createCollection() {
  return {
    route: `/posts/:page?`,
    paginate: true,
    async props({ paginate }) {
      /** filter posts by author, sort by date */
      const allPosts = Astro.fetchContent('./post/*.md');
      const sortedPosts = allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));
      return {
        posts: paginate(sortedPosts, {pageSize: 2}),
      }
    },
  };
}

const { posts } = Astro.props;
---

<html lang="en">
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      image={posts.data[0].image}
      canonicalURL={canonicalURL}
      prev={posts.url.prev}
      next={posts.url.next}
    />

    <style lang="scss">
      .title {
        font-size: 3em;
        letter-spacing: -0.04em;
        margin-top: 2rem;
        margin-bottom: 0;
        text-align: center;
      }

      .count {
        font-size: 1em;
        display: block;
        text-align: center;
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">All Posts</h2>
      <small class="count">{posts.start + 1}–{posts.end + 1} of {posts.total}</small>
      {posts.data.map((post) => <PostPreview post={post} author={authorData[post.author]} />)}
    </main>

    <footer>
      <Pagination prevUrl={posts.url.prev} nextUrl={posts.url.next} />
    </footer>
  </body>
</html>
